package generator

import (
	"bytes"
	"go/format"
	"text/template"
)

// InterfaceTemplate returns the filled template with Interface data
func InterfaceTemplate(s *Interface) ([]byte, error) {
	buf := &bytes.Buffer{}
	t := template.Must(template.New("tmpl").Parse(tmpl))
	t.Execute(buf, s)

	pretty, err := format.Source(buf.Bytes())
	if err != nil {
		return buf.Bytes(), err
	}

	return pretty, nil
}

var tmpl = `// Code generated by github.com/hanofzelbri/interfacer; DO NOT EDIT

package {{.Package}}

import (
    {{range .Imports}}
    "{{.Path}}"
    {{- end}}
)

{{if .Comment}}{{.Comment}}{{end -}}
type {{.Name}} interface {
    {{range .Functions}}
		{{if .Comment}}{{.Comment}}{{end -}}
		{{.Name}}({{range .Params}}{{.Name}} {{.Type.Name}}, {{end}}) ({{range .Res}}{{.Name}} {{.Type.Name}}, {{end}})
	{{end}}
}
`
